// Generated by CoffeeScript 1.7.1
(function() {
  var init_user_delete_btn, init_user_merge_btn, init_user_selections, select_default_user, update_selections, user_select_row;

  window.init_user_list = function() {
    init_user_selections();
    init_user_delete_btn();
    return init_user_merge_btn();
  };

  init_user_selections = function() {
    ($('input[name=user_db]')).each(function() {
      return user_select_row($(this));
    });
    ($('#select-all')).change(function() {
      ($('input[name=user_db]')).prop('checked', ($(this)).is(':checked'));
      return ($('input[name=user_db]')).each(function() {
        return user_select_row($(this));
      });
    });
    return ($('input[name=user_db]')).change(function() {
      return user_select_row($(this));
    });
  };

  user_select_row = function($element) {
    update_selections();
    return ($('input[name=user_db]')).each(function() {
      var id;
      id = $element.val();
      return ($("#" + id)).toggleClass('warning', $element.is(':checked'));
    });
  };

  update_selections = function() {
    var selected;
    selected = ($('input[name=user_db]:checked')).length;
    ($('#user-actions')).toggleClass('hidden', selected === 0);
    ($('#user-merge')).toggleClass('hidden', selected < 2);
    if (selected === 0) {
      ($('#select-all')).prop('indeterminate', false);
      return ($('#select-all')).prop('checked', false);
    } else if (($('input[name=user_db]:not(:checked)')).length === 0) {
      ($('#select-all')).prop('indeterminate', false);
      return ($('#select-all')).prop('checked', true);
    } else {
      return ($('#select-all')).prop('indeterminate', true);
    }
  };

  init_user_delete_btn = function() {
    return ($('#user-delete')).click(function(e) {
      var confirm_message, delete_url, error_message, success_message, user_keys;
      clear_notifications();
      e.preventDefault();
      confirm_message = (($(this)).data('confirm')).replace('{users}', ($('input[name=user_db]:checked')).length);
      if (confirm(confirm_message)) {
        user_keys = [];
        ($('input[name=user_db]:checked')).each(function() {
          ($(this)).attr('disabled', true);
          return user_keys.push(($(this)).val());
        });
        delete_url = ($(this)).data('service-url');
        success_message = ($(this)).data('success');
        error_message = ($(this)).data('error');
        return service_call('DELETE', delete_url, {
          user_keys: user_keys.join(',')
        }, function(err, result) {
          if (err) {
            ($('input[name=user_db]:disabled')).removeAttr('disabled');
            show_notification(error_message.replace('{users}', user_keys.length), 'danger');
            return;
          }
          return ($("#" + (result.join(', #')))).fadeOut(function() {
            ($(this)).remove();
            update_selections();
            return show_notification(success_message.replace('{users}', user_keys.length), 'success');
          });
        });
      }
    });
  };

  window.init_user_merge = function() {
    var user_keys;
    user_keys = ($('#user_keys')).val();
    service_call('GET', "/_s" + location.pathname, {
      user_keys: user_keys
    }, function(error, result) {
      if (error) {
        LOG('Something went terribly wrong');
        return;
      }
      window.user_dbs = result;
      return ($('input[name=user_db]')).removeAttr('disabled');
    });
    return ($('input[name=user_db]')).change(function(event) {
      var user_key;
      user_key = ($(event.currentTarget)).val();
      return select_default_user(user_key);
    });
  };

  select_default_user = function(user_key) {
    var user_db, _i, _len, _results;
    ($('.user-row')).removeClass('success').addClass('danger');
    ($("#" + user_key)).removeClass('danger').addClass('success');
    _results = [];
    for (_i = 0, _len = user_dbs.length; _i < _len; _i++) {
      user_db = user_dbs[_i];
      if (user_key === user_db.key) {
        ($('input[name=user_key]')).val(user_db.key);
        ($('input[name=username]')).val(user_db.username);
        ($('input[name=name]')).val(user_db.name);
        ($('input[name=email]')).val(user_db.email);
        break;
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  init_user_merge_btn = function() {
    return ($('#user-merge')).click(function(e) {
      var user_keys, user_merge_url;
      e.preventDefault();
      user_keys = [];
      ($('input[name=user_db]:checked')).each(function() {
        return user_keys.push(($(this)).val());
      });
      user_merge_url = ($(this)).data('user-merge-url');
      return window.location.href = "" + user_merge_url + "?user_keys=" + (user_keys.join(','));
    });
  };

}).call(this);
